Index: buildozer-64bit.spec
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>[app]\r\n\r\n# (str) Title of your application\r\ntitle = Timetable NF UUNIT\r\n\r\n# (str) Package name\r\npackage.name = timetable_nf_uunit\r\n\r\n# (str) Package domain (needed for android/ios packaging)\r\npackage.domain = org.DudeGeo\r\n\r\n# (str) Source code where the main.py live\r\nsource.dir = .\r\n\r\n# (list) Source files to include (let empty to include all the files)\r\n#source.include_exts = py,png,jpg,kv,atlas,po,mo\r\n\r\n# (list) List of inclusions using pattern matching\r\n#source.include_patterns = assets/*,images/*.png\r\n\r\n# (list) Source files to exclude (let empty to not exclude anything)\r\n#source.exclude_exts = spec\r\n\r\n# (list) List of directory to exclude (let empty to not exclude anything)\r\n#source.exclude_dirs = tests, bin, venv\r\n\r\n# (list) List of exclusions using pattern matching\r\n#source.exclude_patterns = license,images/*/*.jpg\r\n\r\n# (str) Application versioning (method 1)\r\nversion = 0.1\r\n\r\n# (str) Application versioning (method 2)\r\n# version.regex = __version__ = ['\"](.*)['\"]\r\n# version.filename = %(source.dir)s/main.py\r\n\r\n# (list) Application requirements\r\n# comma separated e.g. requirements = sqlite3,kivy\r\nrequirements = python3,kivy==2.3.0,kivymd,https://github.com/kivymd/KivyMD/archive/3274d62.zip,sdl2_ttf==2.0.15\r\n\r\n# (str) Custom source folders for requirements\r\n# Sets custom source for any requirements with recipes\r\n# requirements.source.kivy = ../../kivy\r\n\r\n# (str) Presplash of the application\r\n# presplash.filename = %(source.dir)s/data/logo/presplash512okmin.png\r\n\r\n# (str) Icon of the application\r\nicon.filename = %(source.dir)s/images/1.png\r\n\r\n# (str) Supported orientation (one of landscape, sensorLandscape, portrait or all)\r\norientation = all\r\n\r\n# (list) List of service to declare\r\n#services = NAME:ENTRYPOINT_TO_PY,NAME2:ENTRYPOINT2_TO_PY\r\n\r\n#\r\n# OSX Specific\r\n#\r\n\r\n#\r\n# author = Â© Copyright Info\r\n\r\n# change the major version of python used by the app\r\nosx.python_version = 3\r\n\r\n# Kivy version to use\r\nosx.kivy_version = 2.3.0\r\n\r\n#\r\n# Android specific\r\n#\r\n\r\n# (bool) Indicate if the application should be fullscreen or not\r\nfullscreen = 0\r\n\r\n# (string) Presplash background color (for android toolchain)\r\n# Supported formats are: #RRGGBB #AARRGGBB or one of the following names:\r\n# red, blue, green, black, white, gray, cyan, magenta, yellow, lightgray,\r\n# darkgray, grey, lightgrey, darkgrey, aqua, fuchsia, lime, maroon, navy,\r\n# olive, purple, silver, teal.\r\n#android.presplash_color = #FFFFFF\r\n\r\n# (string) Presplash animation using Lottie format.\r\n# see https://lottiefiles.com/ for examples and https://airbnb.design/lottie/\r\n# for general documentation.\r\n# Lottie files can be created using various tools, like Adobe After Effect or Synfig.\r\n#android.presplash_lottie = \"path/to/lottie/file.json\"\r\n\r\n# (list) Permissions\r\n#android.permissions = INTERNET\r\n\r\n# (list) features (adds uses-feature -tags to manifest)\r\n#android.features = android.hardware.usb.host\r\n\r\n# (int) Target Android API, should be as high as possible.\r\n#android.api = 27\r\n\r\n# (int) Minimum API your APK will support.\r\n#android.minapi = 21\r\n\r\n# (int) Android SDK version to use\r\n#android.sdk = 20\r\n\r\n# (str) Android NDK version to use\r\n#android.ndk = 19b\r\n\r\n# (int) Android NDK API to use. This is the minimum API your app will support, it should usually match android.minapi.\r\n#android.ndk_api = 21\r\n\r\n# (bool) Use --private data storage (True) or --dir public storage (False)\r\n#android.private_storage = True\r\n\r\n# (str) Android NDK directory (if empty, it will be automatically downloaded.)\r\n#android.ndk_path =\r\n\r\n# (str) Android SDK directory (if empty, it will be automatically downloaded.)\r\n#android.sdk_path =\r\n\r\n# (str) ANT directory (if empty, it will be automatically downloaded.)\r\n#android.ant_path =\r\n\r\n# (bool) If True, then skip trying to update the Android sdk\r\n# This can be useful to avoid excess Internet downloads or save time\r\n# when an update is due and you just want to test/build your package\r\n# android.skip_update = False\r\n\r\n# (bool) If True, then automatically accept SDK license\r\n# agreements. This is intended for automation only. If set to False,\r\n# the default, you will be shown the license when first running\r\n# buildozer.\r\n# android.accept_sdk_license = False\r\n\r\n# (str) Android entry point, default is ok for Kivy-based app\r\n#android.entrypoint = org.renpy.android.PythonActivity\r\n\r\n# (str) Android app theme, default is ok for Kivy-based app\r\n# android.apptheme = \"@android:style/Theme.NoTitleBar\"\r\n\r\n# (list) Pattern to whitelist for the whole project\r\n#android.whitelist =\r\n\r\n# (str) Path to a custom whitelist file\r\n#android.whitelist_src =\r\n\r\n# (str) Path to a custom blacklist file\r\n#android.blacklist_src =\r\n\r\n# (list) List of Java .jar files to add to the libs so that pyjnius can access\r\n# their classes. Don't add jars that you do not need, since extra jars can slow\r\n# down the build process. Allows wildcards matching, for example:\r\n# OUYA-ODK/libs/*.jar\r\n#android.add_jars = foo.jar,bar.jar,path/to/more/*.jar\r\n\r\n# (list) List of Java files to add to the android project (can be java or a\r\n# directory containing the files)\r\n#android.add_src =\r\n\r\n# (list) Android AAR archives to add\r\n#android.add_aars =\r\n\r\n# (list) Gradle dependencies to add\r\n#android.gradle_dependencies =\r\n\r\n# (list) add java compile options\r\n# this can for example be necessary when importing certain java libraries using the 'android.gradle_dependencies' option\r\n# see https://developer.android.com/studio/write/java8-support for further information\r\n# android.add_compile_options = \"sourceCompatibility = 1.8\", \"targetCompatibility = 1.8\"\r\n\r\n# (list) Gradle repositories to add {can be necessary for some android.gradle_dependencies}\r\n# please enclose in double quotes \r\n# e.g. android.gradle_repositories = \"maven { url 'https://kotlin.bintray.com/ktor' }\"\r\n#android.add_gradle_repositories =\r\n\r\n# (list) packaging options to add \r\n# see https://google.github.io/android-gradle-dsl/current/com.android.build.gradle.internal.dsl.PackagingOptions.html\r\n# can be necessary to solve conflicts in gradle_dependencies\r\n# please enclose in double quotes \r\n# e.g. android.add_packaging_options = \"exclude 'META-INF/common.kotlin_module'\", \"exclude 'META-INF/*.kotlin_module'\"\r\n#android.add_packaging_options =\r\n\r\n# (list) Java classes to add as activities to the manifest.\r\n#android.add_activities = com.example.ExampleActivity\r\n\r\n# (str) OUYA Console category. Should be one of GAME or APP\r\n# If you leave this blank, OUYA support will not be enabled\r\n#android.ouya.category = GAME\r\n\r\n# (str) Filename of OUYA Console icon. It must be a 732x412 png image.\r\n#android.ouya.icon.filename = %(source.dir)s/data/ouya_icon.png\r\n\r\n# (str) XML file to include as an intent filters in <activity> tag\r\n#android.manifest.intent_filters =\r\n\r\n# (str) launchMode to set for the main activity\r\n#android.manifest.launch_mode = standard\r\n\r\n# (list) Android additional libraries to copy into libs/armeabi\r\n#android.add_libs_armeabi = libs/android/*.so\r\n#android.add_libs_armeabi_v7a = libs/android-v7/*.so\r\n#android.add_libs_arm64_v8a = libs/android-v8/*.so\r\n#android.add_libs_x86 = libs/android-x86/*.so\r\n#android.add_libs_mips = libs/android-mips/*.so\r\n\r\n# (bool) Indicate whether the screen should stay on\r\n# Don't forget to add the WAKE_LOCK permission if you set this to True\r\n#android.wakelock = False\r\n\r\n# (list) Android application meta-data to set (key=value format)\r\n#android.meta_data =\r\n\r\n# (list) Android library project to add (will be added in the\r\n# project.properties automatically.)\r\n#android.library_references =\r\n\r\n# (list) Android shared libraries which will be added to AndroidManifest.xml using <uses-library> tag\r\n#android.uses_library =\r\n\r\n# (str) Android logcat filters to use\r\n#android.logcat_filters = *:S python:D\r\n\r\n# (str) Android additional adb arguments\r\n#android.adb_args = -H host.docker.internal\r\n\r\n# (bool) Copy library instead of making a libpymodules.so\r\n#android.copy_libs = 1\r\n\r\n# (str) The Android arch to build for, choices: armeabi-v7a, arm64-v8a, x86, x86_64\r\nandroid.arch = armeabi-v7a\r\n\r\n# (int) overrides automatic versionCode computation (used in build.gradle)\r\n# this is not the same as app version and should only be edited if you know what you're doing\r\n# android.numeric_version = 1\r\n\r\n# (bool) enables Android auto backup feature (Android API >=23)\r\nandroid.allow_backup = True\r\n\r\n# (str) XML file for custom backup rules (see official auto backup documentation)\r\n# android.backup_rules =\r\n\r\n# (str) If you need to insert variables into your AndroidManifest.xml file,\r\n# you can do so with the manifestPlaceholders property.\r\n# This property takes a map of key-value pairs. (via a string)\r\n# Usage example : android.manifest_placeholders = [myCustomUrl:\\\"org.kivy.customurl\\\"]\r\n# android.manifest_placeholders = [:]\r\n\r\n#\r\n# Python for android (p4a) specific\r\n#\r\n\r\n# (str) python-for-android fork to use, defaults to upstream (kivy)\r\n#p4a.fork = kivy\r\n\r\n# (str) python-for-android branch to use, defaults to master\r\n#p4a.branch = master\r\n\r\n# (str) python-for-android git clone directory (if empty, it will be automatically cloned from github)\r\n#p4a.source_dir =\r\n\r\n# (str) The directory in which python-for-android should look for your own build recipes (if any)\r\n#p4a.local_recipes =\r\n\r\n# (str) Filename to the hook for p4a\r\n#p4a.hook =\r\n\r\n# (str) Bootstrap to use for android builds\r\n# p4a.bootstrap = sdl2\r\n\r\n# (int) port number to specify an explicit --port= p4a argument (eg for bootstrap flask)\r\n#p4a.port =\r\n\r\n# Control passing the --use-setup-py vs --ignore-setup-py to p4a\r\n# \"in the future\" --use-setup-py is going to be the default behaviour in p4a, right now it is not\r\n# Setting this to false will pass --ignore-setup-py, true will pass --use-setup-py\r\n# NOTE: this is general setuptools integration, having pyproject.toml is enough, no need to generate\r\n# setup.py if you're using Poetry, but you need to add \"toml\" to source.include_exts.\r\n#p4a.setup_py = false\r\n\r\n\r\n#\r\n# iOS specific\r\n#\r\n\r\n# (str) Path to a custom kivy-ios folder\r\n#ios.kivy_ios_dir = ../kivy-ios\r\n# Alternately, specify the URL and branch of a git checkout:\r\nios.kivy_ios_url = https://github.com/kivy/kivy-ios\r\nios.kivy_ios_branch = master\r\n\r\n# Another platform dependency: ios-deploy\r\n# Uncomment to use a custom checkout\r\n#ios.ios_deploy_dir = ../ios_deploy\r\n# Or specify URL and branch\r\nios.ios_deploy_url = https://github.com/phonegap/ios-deploy\r\nios.ios_deploy_branch = 1.10.0\r\n\r\n# (bool) Whether or not to sign the code\r\nios.codesign.allowed = false\r\n\r\n# (str) Name of the certificate to use for signing the debug version\r\n# Get a list of available identities: buildozer ios list_identities\r\n#ios.codesign.debug = \"iPhone Developer: <lastname> <firstname> (<hexstring>)\"\r\n\r\n# (str) Name of the certificate to use for signing the release version\r\n#ios.codesign.release = %(ios.codesign.debug)s\r\n\r\n\r\n[buildozer]\r\n\r\n# (int) Log level (0 = error only, 1 = info, 2 = debug (with command output))\r\nlog_level = 2\r\n\r\n# (int) Display warning if buildozer is run as root (0 = False, 1 = True)\r\nwarn_on_root = 1\r\n\r\n# (str) Path to build artifact storage, absolute or relative to spec file\r\n# build_dir = ./.buildozer\r\n\r\n# (str) Path to build output (i.e. .apk, .ipa) storage\r\n# bin_dir = ./bin\r\n\r\n#    -----------------------------------------------------------------------------\r\n#    List as sections\r\n#\r\n#    You can define all the \"list\" as [section:key].\r\n#    Each line will be considered as a option to the list.\r\n#    Let's take [app] / source.exclude_patterns.\r\n#    Instead of doing:\r\n#\r\n#[app]\r\n#source.exclude_patterns = license,data/audio/*.wav,data/images/original/*\r\n#\r\n#    This can be translated into:\r\n#\r\n#[app:source.exclude_patterns]\r\n#license\r\n#data/audio/*.wav\r\n#data/images/original/*\r\n#\r\n\r\n\r\n#    -----------------------------------------------------------------------------\r\n#    Profiles\r\n#\r\n#    You can extend section / key with a profile\r\n#    For example, you want to deploy a demo version of your application without\r\n#    HD content. You could first change the title to add \"(demo)\" in the name\r\n#    and extend the excluded directories to remove the HD content.\r\n#\r\n#[app@demo]\r\n#title = My Application (demo)\r\n#\r\n#[app:source.exclude_patterns@demo]\r\n#images/hd/*\r\n#\r\n#    Then, invoke the command line with the \"demo\" profile:\r\n#\r\n#buildozer --profile demo android debug\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/buildozer-64bit.spec b/buildozer-64bit.spec
--- a/buildozer-64bit.spec	(revision 01bc0aebfc71781f43aa7407d485378e92ed28c2)
+++ b/buildozer-64bit.spec	(date 1715091865599)
@@ -4,7 +4,7 @@
 title = Timetable NF UUNIT
 
 # (str) Package name
-package.name = timetable_nf_uunit
+package.name = timetable_uunit
 
 # (str) Package domain (needed for android/ios packaging)
 package.domain = org.DudeGeo
@@ -226,7 +226,7 @@
 #android.copy_libs = 1
 
 # (str) The Android arch to build for, choices: armeabi-v7a, arm64-v8a, x86, x86_64
-android.arch = armeabi-v7a
+android.arch = arm64-v8a
 
 # (int) overrides automatic versionCode computation (used in build.gradle)
 # this is not the same as app version and should only be edited if you know what you're doing
Index: .travis.yml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>os: linux\r\ndist: focal\r\nlanguage: python\r\n\r\npython:\r\n  - 3.8\r\n\r\ninstall:\r\n  - sudo apt -y install python3-distutils\r\n  - sudo apt -y install python3-pip\r\n  - sudo apt install -y git\r\n  - git clone https://github.com/kivy/buildozer.git\r\n  - python3 -m site\r\n  - ls -l\r\n  - cd buildozer\r\n  - ls -l\r\n  - python3 setup.py install\r\n  - ls -l\r\n  - cd ..\r\n  - ls -l\r\n\r\n  - sudo apt update\r\n  - sudo apt install -y git zip unzip openjdk-8-jdk python3-pip autoconf libtool pkg-config zlib1g-dev libncurses5-dev libncursesw5-dev libtinfo5 cmake libffi-dev libssl-dev\r\n  - pip3 install --upgrade Cython==0.29.19 virtualenv\r\n  - export PATH=$PATH:~/.local/bin/\r\n  - ls -la\r\n  - echo \"TODO COMPILE 32bit\"\r\n  - yes | cp -f buildozer-32bit.spec buildozer.spec\r\n  - yes | travis_wait 20 buildozer android debug\r\n  - ls -la\r\n  - ls bin/ -l\r\n  - echo \"TODO\"\r\n  - gem install dpl --pre\r\n  - dpl releases --token $GITHUB_TOKEN --file \"bin/mortgagecalculator-2.3-armeabi-v7a-debug.apk\" --tag_name \"v.2.3\"\r\n  - echo \"TODO COMPILE 64bit\"\r\n  - ls -la\r\n  - rm -r -f .buildozer\r\n  - ls -la\r\n  - yes | cp -f buildozer-64bit.spec buildozer.spec\r\n  - yes | travis_wait 20 buildozer android debug\r\n  - ls -la\r\n  - ls bin/ -l\r\n  - echo \"TODO\"\r\n  - gem install dpl --pre\r\n  - dpl releases --token $GITHUB_TOKEN --file \"bin/timetable_nf_uunit-0.1-armeabi-v7a-debug.apk\" --tag_name \"v.0.1\"\r\nscript:\r\n  - echo \"OK\"
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.travis.yml b/.travis.yml
--- a/.travis.yml	(revision 01bc0aebfc71781f43aa7407d485378e92ed28c2)
+++ b/.travis.yml	(date 1715092334626)
@@ -26,22 +26,22 @@
   - ls -la
   - echo "TODO COMPILE 32bit"
   - yes | cp -f buildozer-32bit.spec buildozer.spec
-  - yes | travis_wait 20 buildozer android debug
+  - yes | buildozer android debug
   - ls -la
   - ls bin/ -l
   - echo "TODO"
   - gem install dpl --pre
-  - dpl releases --token $GITHUB_TOKEN --file "bin/mortgagecalculator-2.3-armeabi-v7a-debug.apk" --tag_name "v.2.3"
+  - dpl releases --token $GITHUB_TOKEN --file "bin/timetable_nf_uunit-0.1-armeabi-v7a-debug.apk" --tag_name "v.0.1"
   - echo "TODO COMPILE 64bit"
   - ls -la
   - rm -r -f .buildozer
   - ls -la
   - yes | cp -f buildozer-64bit.spec buildozer.spec
-  - yes | travis_wait 20 buildozer android debug
+  - yes | buildozer android debug
   - ls -la
   - ls bin/ -l
   - echo "TODO"
   - gem install dpl --pre
-  - dpl releases --token $GITHUB_TOKEN --file "bin/timetable_nf_uunit-0.1-armeabi-v7a-debug.apk" --tag_name "v.0.1"
+  - dpl releases --token $GITHUB_TOKEN --file "bin/timetable_nf_uunit-0.1-arm64-v8a-debug.apk" --tag_name "v.0.1"
 script:
   - echo "OK"
\ No newline at end of file
Index: travis.yml
===================================================================
diff --git a/travis.yml b/travis.yml
deleted file mode 100644
--- a/travis.yml	(revision 01bc0aebfc71781f43aa7407d485378e92ed28c2)
+++ /dev/null	(revision 01bc0aebfc71781f43aa7407d485378e92ed28c2)
@@ -1,47 +0,0 @@
-os: linux
-dist: focal
-language: python
-
-python:
-  - 3.8
-
-install:
-  - sudo apt -y install python3-distutils
-  - sudo apt -y install python3-pip
-  - sudo apt install -y git
-  - git clone https://github.com/kivy/buildozer.git
-  - python3 -m site
-  - ls -l
-  - cd buildozer
-  - ls -l
-  - python3 setup.py install
-  - ls -l
-  - cd ..
-  - ls -l
-
-  - sudo apt update
-  - sudo apt install -y git zip unzip openjdk-8-jdk python3-pip autoconf libtool pkg-config zlib1g-dev libncurses5-dev libncursesw5-dev libtinfo5 cmake libffi-dev libssl-dev
-  - pip3 install --upgrade Cython==0.29.19 virtualenv
-  - export PATH=$PATH:~/.local/bin/
-  - ls -la
-  - echo "TODO COMPILE 32bit"
-  - yes | cp -f buildozer-32bit.spec buildozer.spec
-  - yes | travis_wait 20 buildozer android debug
-  - ls -la
-  - ls bin/ -l
-  - echo "TODO"
-  - gem install dpl --pre
-  - dpl releases --token $GITHUB_TOKEN --file "bin/mortgagecalculator-2.3-armeabi-v7a-debug.apk" --tag_name "v.2.3"
-  - echo "TODO COMPILE 64bit"
-  - ls -la
-  - rm -r -f .buildozer
-  - ls -la
-  - yes | cp -f buildozer-64bit.spec buildozer.spec
-  - yes | travis_wait 20 buildozer android debug
-  - ls -la
-  - ls bin/ -l
-  - echo "TODO"
-  - gem install dpl --pre
-  - dpl releases --token $GITHUB_TOKEN --file "bin/timetable_nf_uunit-0.1-armeabi-v7a-debug.apk" --tag_name "v.0.1"
-script:
-  - echo "OK"
\ No newline at end of file
Index: buildozer.spec
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>[app]\r\n\r\n# (str) Title of your application\r\ntitle = Mortgage Calculator\r\n\r\n# (str) Package name\r\npackage.name = mortgagecalculator\r\n\r\n# (str) Package domain (needed for android/ios packaging)\r\npackage.domain = org.wiseplat\r\n\r\n# (str) Source code where the main.py live\r\nsource.dir = .\r\n\r\n# (list) Source files to include (let empty to include all the files)\r\n#source.include_exts = py,png,jpg,kv,atlas,po,mo\r\n\r\n# (list) List of inclusions using pattern matching\r\n#source.include_patterns = assets/*,images/*.png\r\n\r\n# (list) Source files to exclude (let empty to not exclude anything)\r\n#source.exclude_exts = spec\r\n\r\n# (list) List of directory to exclude (let empty to not exclude anything)\r\n#source.exclude_dirs = tests, bin, venv\r\n\r\n# (list) List of exclusions using pattern matching\r\n#source.exclude_patterns = license,images/*/*.jpg\r\n\r\n# (str) Application versioning (method 1)\r\nversion = 0.1\r\n\r\n# (str) Application versioning (method 2)\r\n# version.regex = __version__ = ['\"](.*)['\"]\r\n# version.filename = %(source.dir)s/main.py\r\n\r\n# (list) Application requirements\r\n# comma separated e.g. requirements = sqlite3,kivy\r\nrequirements = python3,kivy==2.3.0,kivymd,https://github.com/kivymd/KivyMD/archive/3274d62.zip,sdl2_ttf==2.0.15\r\n\r\n# (str) Custom source folders for requirements\r\n# Sets custom source for any requirements with recipes\r\n# requirements.source.kivy = ../../kivy\r\n\r\n# (str) Presplash of the application\r\n# presplash.filename = %(source.dir)s/data/logo/presplash512okmin.png\r\n\r\n# (str) Icon of the application\r\nicon.filename = %(source.dir)s/images/\r\n\r\n# (str) Supported orientation (one of landscape, sensorLandscape, portrait or all)\r\norientation = all\r\n\r\n# (list) List of service to declare\r\n#services = NAME:ENTRYPOINT_TO_PY,NAME2:ENTRYPOINT2_TO_PY\r\n\r\n#\r\n# OSX Specific\r\n#\r\n\r\n#\r\n# author = Â© Copyright Info\r\n\r\n# change the major version of python used by the app\r\nosx.python_version = 3\r\n\r\n# Kivy version to use\r\nosx.kivy_version = 2.0.0\r\n\r\n#\r\n# Android specific\r\n#\r\n\r\n# (bool) Indicate if the application should be fullscreen or not\r\nfullscreen = 0\r\n\r\n# (string) Presplash background color (for android toolchain)\r\n# Supported formats are: #RRGGBB #AARRGGBB or one of the following names:\r\n# red, blue, green, black, white, gray, cyan, magenta, yellow, lightgray,\r\n# darkgray, grey, lightgrey, darkgrey, aqua, fuchsia, lime, maroon, navy,\r\n# olive, purple, silver, teal.\r\n#android.presplash_color = #FFFFFF\r\n\r\n# (string) Presplash animation using Lottie format.\r\n# see https://lottiefiles.com/ for examples and https://airbnb.design/lottie/\r\n# for general documentation.\r\n# Lottie files can be created using various tools, like Adobe After Effect or Synfig.\r\n#android.presplash_lottie = \"path/to/lottie/file.json\"\r\n\r\n# (list) Permissions\r\n#android.permissions = INTERNET\r\n\r\n# (list) features (adds uses-feature -tags to manifest)\r\n#android.features = android.hardware.usb.host\r\n\r\n# (int) Target Android API, should be as high as possible.\r\n#android.api = 27\r\n\r\n# (int) Minimum API your APK will support.\r\n#android.minapi = 21\r\n\r\n# (int) Android SDK version to use\r\n#android.sdk = 20\r\n\r\n# (str) Android NDK version to use\r\n#android.ndk = 19b\r\n\r\n# (int) Android NDK API to use. This is the minimum API your app will support, it should usually match android.minapi.\r\n#android.ndk_api = 21\r\n\r\n# (bool) Use --private data storage (True) or --dir public storage (False)\r\n#android.private_storage = True\r\n\r\n# (str) Android NDK directory (if empty, it will be automatically downloaded.)\r\n#android.ndk_path =\r\n\r\n# (str) Android SDK directory (if empty, it will be automatically downloaded.)\r\n#android.sdk_path =\r\n\r\n# (str) ANT directory (if empty, it will be automatically downloaded.)\r\n#android.ant_path =\r\n\r\n# (bool) If True, then skip trying to update the Android sdk\r\n# This can be useful to avoid excess Internet downloads or save time\r\n# when an update is due and you just want to test/build your package\r\n# android.skip_update = False\r\n\r\n# (bool) If True, then automatically accept SDK license\r\n# agreements. This is intended for automation only. If set to False,\r\n# the default, you will be shown the license when first running\r\n# buildozer.\r\n# android.accept_sdk_license = False\r\n\r\n# (str) Android entry point, default is ok for Kivy-based app\r\n#android.entrypoint = org.renpy.android.PythonActivity\r\n\r\n# (str) Android app theme, default is ok for Kivy-based app\r\n# android.apptheme = \"@android:style/Theme.NoTitleBar\"\r\n\r\n# (list) Pattern to whitelist for the whole project\r\n#android.whitelist =\r\n\r\n# (str) Path to a custom whitelist file\r\n#android.whitelist_src =\r\n\r\n# (str) Path to a custom blacklist file\r\n#android.blacklist_src =\r\n\r\n# (list) List of Java .jar files to add to the libs so that pyjnius can access\r\n# their classes. Don't add jars that you do not need, since extra jars can slow\r\n# down the build process. Allows wildcards matching, for example:\r\n# OUYA-ODK/libs/*.jar\r\n#android.add_jars = foo.jar,bar.jar,path/to/more/*.jar\r\n\r\n# (list) List of Java files to add to the android project (can be java or a\r\n# directory containing the files)\r\n#android.add_src =\r\n\r\n# (list) Android AAR archives to add\r\n#android.add_aars =\r\n\r\n# (list) Gradle dependencies to add\r\n#android.gradle_dependencies =\r\n\r\n# (list) add java compile options\r\n# this can for example be necessary when importing certain java libraries using the 'android.gradle_dependencies' option\r\n# see https://developer.android.com/studio/write/java8-support for further information\r\n# android.add_compile_options = \"sourceCompatibility = 1.8\", \"targetCompatibility = 1.8\"\r\n\r\n# (list) Gradle repositories to add {can be necessary for some android.gradle_dependencies}\r\n# please enclose in double quotes \r\n# e.g. android.gradle_repositories = \"maven { url 'https://kotlin.bintray.com/ktor' }\"\r\n#android.add_gradle_repositories =\r\n\r\n# (list) packaging options to add \r\n# see https://google.github.io/android-gradle-dsl/current/com.android.build.gradle.internal.dsl.PackagingOptions.html\r\n# can be necessary to solve conflicts in gradle_dependencies\r\n# please enclose in double quotes \r\n# e.g. android.add_packaging_options = \"exclude 'META-INF/common.kotlin_module'\", \"exclude 'META-INF/*.kotlin_module'\"\r\n#android.add_packaging_options =\r\n\r\n# (list) Java classes to add as activities to the manifest.\r\n#android.add_activities = com.example.ExampleActivity\r\n\r\n# (str) OUYA Console category. Should be one of GAME or APP\r\n# If you leave this blank, OUYA support will not be enabled\r\n#android.ouya.category = GAME\r\n\r\n# (str) Filename of OUYA Console icon. It must be a 732x412 png image.\r\n#android.ouya.icon.filename = %(source.dir)s/data/ouya_icon.png\r\n\r\n# (str) XML file to include as an intent filters in <activity> tag\r\n#android.manifest.intent_filters =\r\n\r\n# (str) launchMode to set for the main activity\r\n#android.manifest.launch_mode = standard\r\n\r\n# (list) Android additional libraries to copy into libs/armeabi\r\n#android.add_libs_armeabi = libs/android/*.so\r\n#android.add_libs_armeabi_v7a = libs/android-v7/*.so\r\n#android.add_libs_arm64_v8a = libs/android-v8/*.so\r\n#android.add_libs_x86 = libs/android-x86/*.so\r\n#android.add_libs_mips = libs/android-mips/*.so\r\n\r\n# (bool) Indicate whether the screen should stay on\r\n# Don't forget to add the WAKE_LOCK permission if you set this to True\r\n#android.wakelock = False\r\n\r\n# (list) Android application meta-data to set (key=value format)\r\n#android.meta_data =\r\n\r\n# (list) Android library project to add (will be added in the\r\n# project.properties automatically.)\r\n#android.library_references =\r\n\r\n# (list) Android shared libraries which will be added to AndroidManifest.xml using <uses-library> tag\r\n#android.uses_library =\r\n\r\n# (str) Android logcat filters to use\r\n#android.logcat_filters = *:S python:D\r\n\r\n# (str) Android additional adb arguments\r\n#android.adb_args = -H host.docker.internal\r\n\r\n# (bool) Copy library instead of making a libpymodules.so\r\n#android.copy_libs = 1\r\n\r\n# (str) The Android arch to build for, choices: armeabi-v7a, arm64-v8a, x86, x86_64\r\nandroid.arch = armeabi-v7a\r\n\r\n# (int) overrides automatic versionCode computation (used in build.gradle)\r\n# this is not the same as app version and should only be edited if you know what you're doing\r\n# android.numeric_version = 1\r\n\r\n# (bool) enables Android auto backup feature (Android API >=23)\r\nandroid.allow_backup = True\r\n\r\n# (str) XML file for custom backup rules (see official auto backup documentation)\r\n# android.backup_rules =\r\n\r\n# (str) If you need to insert variables into your AndroidManifest.xml file,\r\n# you can do so with the manifestPlaceholders property.\r\n# This property takes a map of key-value pairs. (via a string)\r\n# Usage example : android.manifest_placeholders = [myCustomUrl:\\\"org.kivy.customurl\\\"]\r\n# android.manifest_placeholders = [:]\r\n\r\n#\r\n# Python for android (p4a) specific\r\n#\r\n\r\n# (str) python-for-android fork to use, defaults to upstream (kivy)\r\n#p4a.fork = kivy\r\n\r\n# (str) python-for-android branch to use, defaults to master\r\n#p4a.branch = master\r\n\r\n# (str) python-for-android git clone directory (if empty, it will be automatically cloned from github)\r\n#p4a.source_dir =\r\n\r\n# (str) The directory in which python-for-android should look for your own build recipes (if any)\r\n#p4a.local_recipes =\r\n\r\n# (str) Filename to the hook for p4a\r\n#p4a.hook =\r\n\r\n# (str) Bootstrap to use for android builds\r\n# p4a.bootstrap = sdl2\r\n\r\n# (int) port number to specify an explicit --port= p4a argument (eg for bootstrap flask)\r\n#p4a.port =\r\n\r\n# Control passing the --use-setup-py vs --ignore-setup-py to p4a\r\n# \"in the future\" --use-setup-py is going to be the default behaviour in p4a, right now it is not\r\n# Setting this to false will pass --ignore-setup-py, true will pass --use-setup-py\r\n# NOTE: this is general setuptools integration, having pyproject.toml is enough, no need to generate\r\n# setup.py if you're using Poetry, but you need to add \"toml\" to source.include_exts.\r\n#p4a.setup_py = false\r\n\r\n\r\n#\r\n# iOS specific\r\n#\r\n\r\n# (str) Path to a custom kivy-ios folder\r\n#ios.kivy_ios_dir = ../kivy-ios\r\n# Alternately, specify the URL and branch of a git checkout:\r\nios.kivy_ios_url = https://github.com/kivy/kivy-ios\r\nios.kivy_ios_branch = master\r\n\r\n# Another platform dependency: ios-deploy\r\n# Uncomment to use a custom checkout\r\n#ios.ios_deploy_dir = ../ios_deploy\r\n# Or specify URL and branch\r\nios.ios_deploy_url = https://github.com/phonegap/ios-deploy\r\nios.ios_deploy_branch = 1.10.0\r\n\r\n# (bool) Whether or not to sign the code\r\nios.codesign.allowed = false\r\n\r\n# (str) Name of the certificate to use for signing the debug version\r\n# Get a list of available identities: buildozer ios list_identities\r\n#ios.codesign.debug = \"iPhone Developer: <lastname> <firstname> (<hexstring>)\"\r\n\r\n# (str) Name of the certificate to use for signing the release version\r\n#ios.codesign.release = %(ios.codesign.debug)s\r\n\r\n\r\n[buildozer]\r\n\r\n# (int) Log level (0 = error only, 1 = info, 2 = debug (with command output))\r\nlog_level = 2\r\n\r\n# (int) Display warning if buildozer is run as root (0 = False, 1 = True)\r\nwarn_on_root = 1\r\n\r\n# (str) Path to build artifact storage, absolute or relative to spec file\r\n# build_dir = ./.buildozer\r\n\r\n# (str) Path to build output (i.e. .apk, .ipa) storage\r\n# bin_dir = ./bin\r\n\r\n#    -----------------------------------------------------------------------------\r\n#    List as sections\r\n#\r\n#    You can define all the \"list\" as [section:key].\r\n#    Each line will be considered as a option to the list.\r\n#    Let's take [app] / source.exclude_patterns.\r\n#    Instead of doing:\r\n#\r\n#[app]\r\n#source.exclude_patterns = license,data/audio/*.wav,data/images/original/*\r\n#\r\n#    This can be translated into:\r\n#\r\n#[app:source.exclude_patterns]\r\n#license\r\n#data/audio/*.wav\r\n#data/images/original/*\r\n#\r\n\r\n\r\n#    -----------------------------------------------------------------------------\r\n#    Profiles\r\n#\r\n#    You can extend section / key with a profile\r\n#    For example, you want to deploy a demo version of your application without\r\n#    HD content. You could first change the title to add \"(demo)\" in the name\r\n#    and extend the excluded directories to remove the HD content.\r\n#\r\n#[app@demo]\r\n#title = My Application (demo)\r\n#\r\n#[app:source.exclude_patterns@demo]\r\n#images/hd/*\r\n#\r\n#    Then, invoke the command line with the \"demo\" profile:\r\n#\r\n#buildozer --profile demo android debug\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/buildozer.spec b/buildozer.spec
--- a/buildozer.spec	(revision 01bc0aebfc71781f43aa7407d485378e92ed28c2)
+++ b/buildozer.spec	(date 1715090950386)
@@ -1,13 +1,13 @@
 [app]
 
 # (str) Title of your application
-title = Mortgage Calculator
+title = Timetable NF UUNIT
 
 # (str) Package name
-package.name = mortgagecalculator
+package.name = timetable_nf_uunit
 
 # (str) Package domain (needed for android/ios packaging)
-package.domain = org.wiseplat
+package.domain = org.DudeGeo
 
 # (str) Source code where the main.py live
 source.dir = .
@@ -46,7 +46,7 @@
 # presplash.filename = %(source.dir)s/data/logo/presplash512okmin.png
 
 # (str) Icon of the application
-icon.filename = %(source.dir)s/images/
+icon.filename = %(source.dir)s/images/1.png
 
 # (str) Supported orientation (one of landscape, sensorLandscape, portrait or all)
 orientation = all
@@ -65,7 +65,7 @@
 osx.python_version = 3
 
 # Kivy version to use
-osx.kivy_version = 2.0.0
+osx.kivy_version = 2.3.0
 
 #
 # Android specific
